@model PetClinicSystem.Models.Prescription

@{
    ViewData["Title"] = "Prescription Details";
    ViewData["ActivePage"] = "Prescriptions";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2 class="page-title">
                <i class="fas fa-prescription-bottle-alt me-2"></i>@ViewData["Title"]
            </h2>
            <div class="text-muted small">
                Prescribed on @Model.PrescribedDate?.ToString("MMMM dd, yyyy")
            </div>
        </div>
        <div class="col-md-6 text-end">
            @if (!Model.IsDispensed ?? true)
            {
                <button class="btn btn-success me-2 dispense-btn" data-id="@Model.PrescriptionId">
                    <i class="fas fa-check me-2"></i>Mark as Dispensed
                </button>
            }
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to List
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-pills me-2"></i>Medication Details
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="fw-bold">Medication Name</div>
                                <div>@Model.MedicationName</div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Dosage</div>
                                <div>@Model.Dosage</div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Frequency</div>
                                <div>@Model.Frequency</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="fw-bold">Duration</div>
                                <div>@Model.Duration</div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Refills</div>
                                <div>@(Model.Refills?.ToString() ?? "0") remaining</div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Status</div>
                                <div>
                                    <span class="badge bg-@(Model.IsDispensed ?? false ? "success" : "warning")">
                                        @(Model.IsDispensed ?? false ? "Dispensed" : "Pending")
                                    </span>
                                    @if (IsPrescriptionActive(Model))
                                    {
                                        <span class="badge bg-info ms-1">Active</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="fw-bold">Instructions</div>
                        <div class="border rounded p-3 bg-light">@Model.Instructions</div>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-notes-medical me-2"></i>Related Consultation
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="fw-bold">Date</div>
                        <div>@Model.Consultation?.ConsultationDate?.ToString("MMMM dd, yyyy")</div>
                    </div>
                    <div class="mb-3">
                        <div class="fw-bold">Diagnosis</div>
                        <div>@(string.IsNullOrEmpty(Model.Consultation?.Diagnosis) ? "No diagnosis recorded" : Model.Consultation.Diagnosis)</div>
                    </div>
                    <div class="mb-3">
                        <div class="fw-bold">Veterinarian</div>
                        <div>Dr. @Model.Consultation?.Vet?.LastName</div>
                    </div>
                    <a asp-controller="Consultations" asp-action="Details" asp-route-id="@Model.ConsultationId" class="btn btn-outline-primary">
                        View Consultation Details
                    </a>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-paw me-2"></i>Patient Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        @if (!string.IsNullOrEmpty(Model.Consultation?.Patient?.PhotoPath))
                        {
                            <img src="@Model.Consultation.Patient.PhotoPath" class="avatar-lg rounded-circle me-3" alt="@Model.Consultation.Patient.Name">
                        }
                        <div>
                            <h5 class="mb-0">@Model.Consultation?.Patient?.Name</h5>
                            <div class="text-muted">@Model.Consultation?.Patient?.Species | @Model.Consultation?.Patient?.Breed</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="fw-bold">Age</div>
                                <div>
                                    @if (Model.Consultation?.Patient?.DateOfBirth.HasValue ?? false)
                                    {
                                        var dob = Model.Consultation.Patient.DateOfBirth.Value;
                                        var today = DateOnly.FromDateTime(DateTime.Today);
                                        var age = today.Year - dob.Year;

                                        if (dob > today.AddYears(-age))
                                        {
                                            age--;
                                        }

                                        <span>@age years</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unknown</span>
                                    }
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Gender</div>
                                <div>@Model.Consultation?.Patient?.Gender</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="fw-bold">Owner</div>
                                <div>@Model.Consultation?.Patient?.Owner?.FirstName @Model.Consultation?.Patient?.Owner?.LastName</div>
                            </div>
                            <div class="mb-3">
                                <div class="fw-bold">Contact</div>
                                <div>@Model.Consultation?.Patient?.Owner?.Phone</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Consultation?.Billings?.Any() ?? false)
            {
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-receipt me-2"></i>Billing Information
                        </h5>
                    </div>
                    <div class="card-body">
                        @foreach (var billing in Model.Consultation.Billings)
                        {
                            <div class="mb-3">
                                <div class="fw-bold">Invoice #@billing.BillId</div>
                                <div>Total: @billing.TotalAmount.ToString("C")</div>
                                <div>
                                    Status:
                                    <span class="badge bg-@(billing.Balance <= 0 ? "success" : "warning")">
                                        @(billing.Balance <= 0 ? "Paid" : "Pending")
                                    </span>
                                </div>
                            </div>
                            <a asp-controller="Billings" asp-action="Details" asp-route-id="@billing.BillId" class="btn btn-sm btn-outline-primary">
                                View Invoice
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Dispense button handler
        $('.dispense-btn').click(function() {
            var id = $(this).data('id');
            Swal.fire({
                title: 'Mark as Dispensed?',
                text: "This will update the prescription status to dispensed.",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, mark as dispensed'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/Prescriptions/Dispense/' + id, function() {
                        Swal.fire(
                            'Dispensed!',
                            'The prescription has been marked as dispensed.',
                            'success'
                        ).then(() => location.reload());
                    }).fail(function() {
                        Swal.fire(
                            'Error!',
                            'Something went wrong.',
                            'error'
                        );
                    });
                }
            });
        });
    </script>
}

@functions {
    private bool IsPrescriptionActive(Prescription prescription)
    {
        if (!prescription.PrescribedDate.HasValue)
            return false;

        var durationParts = prescription.Duration.Split(' ');
        if (durationParts.Length != 2)
            return false;

        if (!int.TryParse(durationParts[0], out var durationValue))
            return false;

        var endDate = prescription.PrescribedDate.Value;

        switch (durationParts[1].ToLower())
        {
            case "day":
            case "days":
                endDate = endDate.AddDays(durationValue);
                break;
            case "week":
            case "weeks":
                endDate = endDate.AddDays(durationValue * 7);
                break;
            case "month":
            case "months":
                endDate = endDate.AddMonths(durationValue);
                break;
            default:
                return false;
        }

        return DateTime.Now <= endDate;
    }
}